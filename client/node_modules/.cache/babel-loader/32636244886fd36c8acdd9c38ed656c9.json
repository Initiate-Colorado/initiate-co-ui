{"ast":null,"code":"var _jsxFileName = \"/Users/cwefso/turing/module4/projects/initiate-co/initiate-co-ui/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { store } from './configure-store';\nimport { Provider } from 'react-redux';\nconst router = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 4\n  }\n})));\nReactDOM.render(router, document.getElementById(\"root\"));\n\nconst initiativeStepReducer = function (state = 0, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    case \"DECREMENT\":\n      return state - 1;\n\n    default:\n      return state;\n  }\n}; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/cwefso/turing/module4/projects/initiate-co/initiate-co-ui/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","createStore","store","Provider","router","render","document","getElementById","initiativeStepReducer","state","action","type","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,MAAM,gBACX,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD;AAQAL,QAAQ,CAACQ,MAAT,CAAgBD,MAAhB,EAAwBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB;;AAEA,MAAMC,qBAAqB,GAAG,UAAUC,KAAK,GAAG,CAAlB,EAAqBC,MAArB,EAA6B;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACC,aAAOF,KAAK,GAAG,CAAf;;AACD,SAAK,WAAL;AACC,aAAOA,KAAK,GAAG,CAAf;;AACD;AACC,aAAOA,KAAP;AANF;AAQA,CATD,C,CAWA;AACA;AACA;;;AACAV,aAAa,CAACa,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { store } from './configure-store';\nimport { Provider } from 'react-redux';\n\nconst router = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(router, document.getElementById(\"root\"));\n\nconst initiativeStepReducer = function (state = 0, action) {\n\tswitch (action.type) {\n\t\tcase \"INCREMENT\":\n\t\t\treturn state + 1;\n\t\tcase \"DECREMENT\":\n\t\t\treturn state - 1;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}