{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OperationType_1 = require(\"../OperationType\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar DefaultQueryAdapter =\n/** @class */\nfunction () {\n  function DefaultQueryAdapter(options, configuration) {\n    var _this = this; // Default configs\n\n\n    this.config = {\n      operationName: \"\"\n    };\n\n    if (configuration) {\n      Object.entries(configuration).forEach(function (_a) {\n        var key = _a[0],\n            value = _a[1];\n        _this.config[key] = value;\n      });\n    }\n\n    if (Array.isArray(options)) {\n      this.variables = Utils_1.default.resolveVariables(options);\n    } else {\n      this.variables = options.variables;\n      this.fields = options.fields || [];\n      this.operation = options.operation;\n    }\n  } // kicks off building for a single query\n\n\n  DefaultQueryAdapter.prototype.queryBuilder = function () {\n    return this.operationWrapperTemplate(this.operationTemplate(this.variables));\n  }; // if we have an array of options, call this\n\n\n  DefaultQueryAdapter.prototype.queriesBuilder = function (queries) {\n    var _this = this;\n\n    var content = function content() {\n      var tmpl = [];\n      queries.forEach(function (query) {\n        if (query) {\n          _this.operation = query.operation;\n          _this.fields = query.fields;\n          tmpl.push(_this.operationTemplate(query.variables));\n        }\n      });\n      return tmpl.join(\" \");\n    };\n\n    return this.operationWrapperTemplate(content());\n  }; // Convert object to argument and type map. eg: ($id: Int)\n\n\n  DefaultQueryAdapter.prototype.queryDataArgumentAndTypeMap = function () {\n    var variablesUsed = this.variables;\n\n    if (this.fields && typeof this.fields === \"object\") {\n      variablesUsed = __assign(__assign({}, Utils_1.default.getNestedVariables(this.fields)), variablesUsed);\n    }\n\n    return variablesUsed && Object.keys(variablesUsed).length > 0 ? \"(\" + Object.keys(variablesUsed).reduce(function (dataString, key, i) {\n      return \"\" + dataString + (i !== 0 ? \", \" : \"\") + \"$\" + key + \": \" + Utils_1.default.queryDataType(variablesUsed[key]);\n    }, \"\") + \")\" : \"\";\n  };\n\n  DefaultQueryAdapter.prototype.operationWrapperTemplate = function (content) {\n    var query = OperationType_1.default.Query + \" \" + this.queryDataArgumentAndTypeMap() + \" { \" + content + \" }\";\n    query = query.replace(\"query\", \"query\" + (this.config.operationName !== \"\" ? \" \" + this.config.operationName : \"\"));\n    return {\n      query: query,\n      variables: Utils_1.default.queryVariablesMap(this.variables, this.fields)\n    };\n  }; // query\n\n\n  DefaultQueryAdapter.prototype.operationTemplate = function (variables) {\n    return this.operation + \" \" + (variables ? Utils_1.default.queryDataNameAndArgumentMap(variables) : \"\") + \" \" + (this.fields && this.fields.length > 0 ? \"{ \" + Utils_1.default.queryFieldsMap(this.fields) + \" }\" : \"\");\n  };\n\n  return DefaultQueryAdapter;\n}();\n\nexports.default = DefaultQueryAdapter;","map":{"version":3,"sources":["../../src/adapters/DefaultQueryAdapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OperationType_1 = require(\"../OperationType\");\nvar Utils_1 = require(\"../Utils\");\nvar DefaultQueryAdapter = /** @class */ (function () {\n    function DefaultQueryAdapter(options, configuration) {\n        var _this = this;\n        // Default configs\n        this.config = {\n            operationName: \"\",\n        };\n        if (configuration) {\n            Object.entries(configuration).forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                _this.config[key] = value;\n            });\n        }\n        if (Array.isArray(options)) {\n            this.variables = Utils_1.default.resolveVariables(options);\n        }\n        else {\n            this.variables = options.variables;\n            this.fields = options.fields || [];\n            this.operation = options.operation;\n        }\n    }\n    // kicks off building for a single query\n    DefaultQueryAdapter.prototype.queryBuilder = function () {\n        return this.operationWrapperTemplate(this.operationTemplate(this.variables));\n    };\n    // if we have an array of options, call this\n    DefaultQueryAdapter.prototype.queriesBuilder = function (queries) {\n        var _this = this;\n        var content = function () {\n            var tmpl = [];\n            queries.forEach(function (query) {\n                if (query) {\n                    _this.operation = query.operation;\n                    _this.fields = query.fields;\n                    tmpl.push(_this.operationTemplate(query.variables));\n                }\n            });\n            return tmpl.join(\" \");\n        };\n        return this.operationWrapperTemplate(content());\n    };\n    // Convert object to argument and type map. eg: ($id: Int)\n    DefaultQueryAdapter.prototype.queryDataArgumentAndTypeMap = function () {\n        var variablesUsed = this.variables;\n        if (this.fields && typeof this.fields === \"object\") {\n            variablesUsed = __assign(__assign({}, Utils_1.default.getNestedVariables(this.fields)), variablesUsed);\n        }\n        return variablesUsed && Object.keys(variablesUsed).length > 0\n            ? \"(\" + Object.keys(variablesUsed).reduce(function (dataString, key, i) {\n                return \"\" + dataString + (i !== 0 ? \", \" : \"\") + \"$\" + key + \": \" + Utils_1.default.queryDataType(variablesUsed[key]);\n            }, \"\") + \")\"\n            : \"\";\n    };\n    DefaultQueryAdapter.prototype.operationWrapperTemplate = function (content) {\n        var query = OperationType_1.default.Query + \" \" + this.queryDataArgumentAndTypeMap() + \" { \" + content + \" }\";\n        query = query.replace(\"query\", \"query\" + (this.config.operationName !== \"\" ? \" \" + this.config.operationName : \"\"));\n        return {\n            query: query,\n            variables: Utils_1.default.queryVariablesMap(this.variables, this.fields),\n        };\n    };\n    // query\n    DefaultQueryAdapter.prototype.operationTemplate = function (variables) {\n        return this.operation + \" \" + (variables ? Utils_1.default.queryDataNameAndArgumentMap(variables) : \"\") + \" \" + (this.fields && this.fields.length > 0\n            ? \"{ \" + Utils_1.default.queryFieldsMap(this.fields) + \" }\"\n            : \"\");\n    };\n    return DefaultQueryAdapter;\n}());\nexports.default = DefaultQueryAdapter;\n//# sourceMappingURL=DefaultQueryAdapter.js.map"]},"metadata":{},"sourceType":"script"}